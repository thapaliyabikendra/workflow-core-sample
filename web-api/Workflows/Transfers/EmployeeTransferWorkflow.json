{
  "Id": "EmployeeTransferWorkflow",
  "Version": 1,
  "DataType": "ACMS.WebApi.Models.DynamicData, ACMS.WebApi",
  "Steps": [
    {
      "Id": "GenerateTaskIdStep",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.GenerateTaskIdStep, ACMS.WebApi",
      "NextStepId": "CallBPMApiStep",
      "Outputs": {
        "TaskId": "step.TaskId"
      }
    },
    {
      "Id": "CallBPMApiStep",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.CallApiStep, ACMS.WebApi",
      "NextStepId": "IfConditionAfterBPMApiCall",
      "Inputs": {
        "Data": {
          "@TaskId": "data[\"TaskId\"]",
          "@UserId": "data[\"UserId\"]",
          "@Url": "\"http://localhost:3000/bpm/api/approval-request\""
        }
      },
      "Outputs": {
        "ApiResponse1Success": "step.Response[\"success\"]"
      }
    },
    {
      "Id": "IfConditionAfterBPMApiCall",
      "StepType": "WorkflowCore.Primitives.If, WorkflowCore",
      "NextStepId": "WaitingForBPMAPIApprovalResponseEventLog",
      "Inputs": {
        "Condition": "!Convert.ToBoolean(data[\"ApiResponse1Success\"])"
      },
      "Do": [
        [
          {
            "Id": "BPMApiCallFailureLog",
            "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
            "Inputs": {
              "Message": "\"[] BPM API Approval Request failed.\""
            }
          }
        ]
      ]
    },
    {
      "Id": "WaitingForBPMAPIApprovalResponseEventLog",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
      "NextStepId": "WaitForBPMAPIApprovalResponseEvent",
      "Inputs": {
        "Message": "\"[] Waiting for BPM API Approval Response Event.\""
      }
    },
    {
      "Id": "WaitForBPMAPIApprovalResponseEvent",
      "StepType": "WorkflowCore.Primitives.WaitFor, WorkflowCore",
      "NextStepId": "ReceivedBPMAPIApprovalResponseEventLog",
      "Inputs": {
        "EventName": "\"BPMAPIApprovalResponseEvent\"",
        "EventKey": "data[\"TaskId\"]",
        "EffectiveDate": "DateTime.Now"
      },
      "Outputs": {
        "ApprovalStatus": "step.EventData"
      }
    },
    {
      "Id": "ReceivedBPMAPIApprovalResponseEventLog",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
      "NextStepId": "DecideApprovalStatus",
      "Inputs": {
        "Message": "\"[] BPM API Approval Response Event received.\""
      }
    },
    {
      "Id": "DecideApprovalStatus",
      "StepType": "WorkflowCore.Primitives.Decide, WorkflowCore",
      "SelectNextStep": {
        "TriggerUiPathJobStep": "object.Equals(data[\"ApprovalStatus\"], \"Approved\")",
        "NotifyEmployeeStep": "object.Equals(data[\"ApprovalStatus\"], \"Rejected\")"
      }
    },
    {
      "Id": "TriggerUiPathJobStep",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.CallApiStep, ACMS.WebApi",
      "NextStepId": "ScheduleStep",
      "Inputs": {
        "Data": {
          "@TaskId": "data[\"TaskId\"]",
          "@UserId": "data[\"UserId\"]",
          "@Url": "\"http://localhost:3000/ui-path/api/start-job\""
        }
      },
      "Outputs": {
        "UiPathJobId": "step.Response[\"uiPathJobId\"]"
      }
    },
    {
      "Id": "ScheduleStep",
      "StepType": "WorkflowCore.Primitives.Schedule, WorkflowCore",
      "Inputs": {
        "Interval": "TimeSpan.FromSeconds(3)"
      },
      "Do": [
        [
          {
            "Id": "UIPathRecurJobStep",
            "StepType": "WorkflowCore.Primitives.Recur, WorkflowCore",
            "Inputs": {
              "Interval": "TimeSpan.FromSeconds(3)",
              "StopCondition": "object.Equals(Convert.ToString(data[\"PollUiPathJobStatus\"]), \"Ended\")"
            },
            "Do": [
              [
                {
                  "Id": "PollUiPathJobStatusStep",
                  "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.CallApiStep, ACMS.WebApi",
                  "NextStepId": "TriggerUiPathJobIncreaseCounter",
                  "Inputs": {
                    "Data": {
                      "@TaskId": "data[\"TaskId\"]",
                      "@UserId": "data[\"UserId\"]",
                      "@Url": "\"http://localhost:3000/ui-path/api/job-status\"",
                      "@UiPathJobId": "data[\"UiPathJobId\"] ?? \"\"",
                      "@PollingCount": "data[\"PollingCount\"] ?? 0"
                    }
                  },
                  "Outputs": {
                    "IsDataPolled": "step.Data[\"IsDataPolled\"]",
                    "PollingCount": "step.Data[\"PollingCount\"]",
                    "PollUiPathJobStatus": "step.Response[\"jobStatus\"]"
                  }
                },
                {
                  "Id": "TriggerUiPathJobIncreaseCounter",
                  "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.IncrementStep, ACMS.WebApi",
                  "NextStepId": "RecurJobLog",
                  "Inputs": {
                    "Value1": "data[\"PollingCount\"] ?? 0"
                  },
                  "Outputs": {
                    "PollingCount": "Value2"
                  }
                },
                {
                  "Id": "RecurJobLog",
                  "NextStepId": "IfPollUiPathJobStatusSuccessStep",
                  "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
                  "Inputs": {
                    "Message": "\"Job Status: \" + data[\"PollUiPathJobStatus\"] + \", PollingCount:\" + data[\"PollingCount\"]"
                  }
                },
                {
                  "Id": "IfPollUiPathJobStatusSuccessStep",
                  "StepType": "WorkflowCore.Primitives.If, WorkflowCore",
                  "Inputs": {
                    "Condition": "object.Equals(Convert.ToString(data[\"PollUiPathJobStatus\"]), \"Ended\")"
                  },
                  "Do": [
                    [
                      {
                        "Id": "NotifyEmployeeStepStep",
                        "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.NotifyEmployeeStep, ACMS.WebApi",
                        "NextStepId": "WorkflowEndedLogStep",
                        "Inputs": {
                          "TaskId": "data[\"TaskId\"]",
                          "ApprovalStatus": "data[\"ApprovalStatus\"]"
                        }
                      },
                      {
                        "Id": "WorkflowEndedLogStep",
                        "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
                        "Inputs": {
                          "Message": "\"[] Workflow Ended 1.\""
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "Id": "NotifyEmployeeStep",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.NotifyEmployeeStep, ACMS.WebApi",
      "NextStepId": "WorkflowEndedLogStep2",
      "Inputs": {
        "TaskId": "data[\"TaskId\"]",
        "ApprovalStatus": "data.ApprovalStatus"
      }
    },
    {
      "Id": "WorkflowEndedLogStep2",
      "StepType": "ACMS.WebApi.Workflows.Transfers.Steps.PrintMessageStep, ACMS.WebApi",
      "Inputs": {
        "Message": "\"[] Workflow Ended 2.\""
      }
    }
  ]
}